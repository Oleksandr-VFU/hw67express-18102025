import { MongoClient } from 'mongodb';
import dotenv from 'dotenv';
import { initializeDatabase } from '../data/seedDatabase.mjs';

// –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ environment –∑–º—ñ–Ω–Ω—ñ
dotenv.config();

// MongoDB Atlas –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –∑ environment –∑–º—ñ–Ω–Ω–∏—Ö
const uri = process.env.MONGODB_URI;
const dbName = process.env.DB_NAME || 'blog';

if (!uri) {
  console.error('‚ùå –ü–û–ú–ò–õ–ö–ê: MONGODB_URI –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ environment –∑–º—ñ–Ω–Ω–∏—Ö!');
  console.error('üìù –°—Ç–≤–æ—Ä—ñ—Ç—å .env —Ñ–∞–π–ª –∑ –ø—Ä–∏–∫–ª–∞–¥—É .env.example —Ç–∞ –≤–∫–∞–∂—ñ—Ç—å –≤–∞—à MongoDB Atlas URI');
  process.exit(1);
}

// –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB Atlas
let db;
const client = new MongoClient(uri);

async function connectToMongoDB() {
  try {
    await client.connect();
    console.log('‚úÖ –£—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ MongoDB Atlas');
    
    db = client.db(dbName);
    console.log(`üìÑ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –±–∞–∑–∞ –¥–∞–Ω–∏—Ö: ${dbName}`);
    
    // –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
    await db.admin().ping();
    console.log('üèì MongoDB Atlas –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –Ω–∞ ping');
    
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ–ª–µ–∫—Ü—ñ–π –∑ —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏
    await initializeDatabase(db);
    
    return db;
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB:', error);
    throw error;
  }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è –∑'—î–¥–Ω–∞–Ω–Ω—è
async function closeMongoDB() {
  try {
    await client.close();
    console.log('‚úÖ MongoDB –∑\'—î–¥–Ω–∞–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç–æ');
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä–∏—Ç—Ç—ñ MongoDB:', error);
    throw error;
  }
}

// –ï–∫—Å–ø–æ—Ä—Ç –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —ñ–Ω—à–∏—Ö –º–æ–¥—É–ª—è—Ö
export { db, client, connectToMongoDB, closeMongoDB };