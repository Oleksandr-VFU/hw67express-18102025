import express from 'express';
import path from 'path';
import { fileURLToPath } from 'url';
import ejs from 'ejs';
import cookieParser from 'cookie-parser';
import session from 'express-session';
import FileStore from 'session-file-store';
import passport from 'passport';
import dotenv from 'dotenv';
import { connectToMongoDB, closeMongoDB } from './config/database.mjs';
import usersRouter from './routes/users.mjs';
import articlesRouter from './routes/articles.mjs';
import settingsRouter from './routes/settings.mjs';
import authRouter from './routes/auth.mjs';
import protectedRouter from './routes/protected.mjs';
import { requestLogger, passportAuthMiddleware, requireAdmin, protectedRouteMiddleware } from './middleware/index.mjs';
import { HomeController } from './controllers/HomeController.mjs';
import './config/passport.mjs'; // –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è Passport —Å—Ç—Ä–∞—Ç–µ–≥—ñ–π 

// –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ environment –∑–º—ñ–Ω–Ω—ñ
dotenv.config();

// –û—Ç—Ä–∏–º—É—î–º–æ __dirname –¥–ª—è ES modules
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –°—Ç–≤–æ—Ä—é—î–º–æ EXPRESS —Å–µ—Ä–≤–µ—Ä
const app = express();
const PORT = process.env.PORT || 3000;

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —à–∞–±–ª–æ–Ω—ñ–∑–∞—Ç–æ—Ä—ñ–≤
app.set('view engine', 'pug'); // –î–µ—Ñ–æ–ª—Ç–Ω–∏–π view engine –¥–ª—è Pug
app.set('views', path.join(__dirname, 'views'));

// –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è EJS engine –¥–ª—è .ejs —Ñ–∞–π–ª—ñ–≤
app.engine('ejs', ejs.renderFile);

// Middleware –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥—É JSON
app.use(express.json());

// Middleware –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥—É URL-encoded –¥–∞–Ω–∏—Ö —Ñ–æ—Ä–º
app.use(express.urlencoded({ extended: true }));

// Middleware –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥—É cookies
app.use(cookieParser());

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–µ—Å—ñ–π –¥–ª—è Passport –∑ –±–µ–∑–ø–µ—á–Ω–∏–º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏
const isProduction = process.env.NODE_ENV === 'production';
const sessionSecret = process.env.SESSION_SECRET || 'development-session-secret-change-in-production';

// –°—Ç–≤–æ—Ä—é—î–º–æ FileStore –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å–µ—Å—ñ–π
const SessionFileStore = FileStore(session);

app.use(session({
  name: 'sessionId', // –ö–∞—Å—Ç–æ–º–Ω–∞ –Ω–∞–∑–≤–∞ cookie –∑–∞–º—ñ—Å—Ç—å connect.sid
  secret: sessionSecret,
  resave: false, // –ù–µ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —Å–µ—Å—ñ—é —è–∫—â–æ –≤–æ–Ω–∞ –Ω–µ –∑–º—ñ–Ω–∏–ª–∞—Å—å
  saveUninitialized: false, // –ù–µ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ —Å–µ—Å—ñ—ó
  rolling: true, // –û–Ω–æ–≤–ª—é–≤–∞—Ç–∏ —á–∞—Å –∂–∏—Ç—Ç—è cookie –ø—Ä–∏ –∫–æ–∂–Ω–æ–º—É –∑–∞–ø–∏—Ç—ñ
  store: new SessionFileStore({
    path: './sessions', // –ü–∞–ø–∫–∞ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å–µ—Å—ñ–π
    ttl: 7 * 24 * 60 * 60, // –ß–∞—Å –∂–∏—Ç—Ç—è —Å–µ—Å—ñ—ó –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (7 –¥–Ω—ñ–≤)
    retries: 2, // –ó–º–µ–Ω—à–µ–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ø—Ä–æ–±
    factor: 2, // –§–∞–∫—Ç–æ—Ä –∑–∞—Ç—Ä–∏–º–∫–∏ –º—ñ–∂ —Å–ø—Ä–æ–±–∞–º–∏
    minTimeout: 50, // –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –∑–∞—Ç—Ä–∏–º–∫–∞
    maxTimeout: 200, // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∑–∞—Ç—Ä–∏–º–∫–∞
    logFn: function() {} // –í–∏–º–∏–∫–∞—î–º–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫ session-file-store
  }),
  cookie: { 
    httpOnly: true, // –ó–∞—Ö–∏—Å—Ç –≤—ñ–¥ XSS –∞—Ç–∞–∫ - cookie –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ —á–µ—Ä–µ–∑ JavaScript
    secure: isProduction, // –¢—ñ–ª—å–∫–∏ HTTPS –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—ñ
    sameSite: 'lax', // –ó–∞—Ö–∏—Å—Ç –≤—ñ–¥ CSRF –∞—Ç–∞–∫
    maxAge: 7 * 24 * 60 * 60 * 1000 // 7 –¥–Ω—ñ–≤ –¥–ª—è —Ç—Ä–∏–≤–∞–ª–æ—ó –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
  }
}));

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Passport
app.use(passport.initialize());
app.use(passport.session());

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
app.use(express.static(path.join(__dirname, '..', 'public')));

// –ú–∞—Ä—à—Ä—É—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞

// Root route –∑ –º—ñ–¥–ª–≤–∞—Ä–æ–º –ª–æ–≥—É–≤–∞–Ω–Ω—è - –ø–æ–∫–∞–∑—É—î–º–æ —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –∞–±–æ –¥–∞—à–±–æ—Ä–¥
app.get('/', requestLogger, HomeController.getHomePage);

// –ü—É–±–ª—ñ—á–Ω—ñ –º–∞—Ä—à—Ä—É—Ç–∏ (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó)
app.use('/auth', authRouter);
app.use('/settings', settingsRouter);

// –ó–∞—Ö–∏—â–µ–Ω—ñ –º–∞—Ä—à—Ä—É—Ç–∏ (–ø–æ—Ç—Ä–µ–±—É—é—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó —á–µ—Ä–µ–∑ Passport)
app.use('/users', passportAuthMiddleware, usersRouter);
app.use('/articles', passportAuthMiddleware, requireAdmin, articlesRouter);

// –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π –∑–∞—Ö–∏—â–µ–Ω–∏–π –º–∞—Ä—à—Ä—É—Ç –∑ –¥–µ—Ç–∞–ª—å–Ω–æ—é –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é —Å–µ—Å—ñ—ó
app.use('/protected', protectedRouteMiddleware, protectedRouter);

// –ì–ª–æ–±–∞–ª—å–Ω—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–º–∏–ª–æ–∫

// –û–±—Ä–æ–±–∫–∞ –Ω–µ—ñ—Å–Ω—É—é—á–∏—Ö –º–∞—Ä—à—Ä—É—Ç—ñ–≤ (404)
app.use((req, res) => {
  res.status(404).send('Not Found');
});

// –ì–ª–æ–±–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ (500)
app.use((err, req, res, next) => {
  console.error(err.stack);
  
  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤–∂–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—ñ –∑–∞–≥–æ–ª–æ–≤–∫–∏
  if (!res.headersSent) {
    res.status(500).send('Internal Server Error');
  }
});

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–µ—Ä–≤–µ—Ä –∑ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è–º –¥–æ MongoDB
async function startServer() {
  try {
    // –°–ø–æ—á–∞—Ç–∫—É –ø—ñ–¥–∫–ª—é—á–∞—î–º–æ—Å—è –¥–æ MongoDB
    await connectToMongoDB();
    
    // –ü–æ—Ç—ñ–º –∑–∞–ø—É—Å–∫–∞—î–º–æ Express —Å–µ—Ä–≤–µ—Ä
    const server = app.listen(PORT, () => {
      console.log(`üöÄ Server is running on port ${PORT}`);
      console.log(`üåê http://localhost:${PORT}`);
    });
    
    // –û–±—Ä–æ–±–∫–∞ –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–∫—Ä–∏—Ç—Ç—è —Å–µ—Ä–≤–µ—Ä–∞
    process.on('SIGINT', async () => {
      console.log('\n‚èπÔ∏è –û—Ç—Ä–∏–º–∞–Ω–æ —Å–∏–≥–Ω–∞–ª SIGINT. –ó–∞–∫—Ä–∏–≤–∞—î–º–æ —Å–µ—Ä–≤–µ—Ä...');
      
      try {
        await closeMongoDB();
        
        server.close(() => {
          console.log('‚úÖ Express —Å–µ—Ä–≤–µ—Ä –∑–∞–∫—Ä–∏—Ç–æ');
          process.exit(0);
        });
      } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä–∏—Ç—Ç—ñ:', error);
        process.exit(1);
      }
    });
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤–µ—Ä–∞:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
startServer();
